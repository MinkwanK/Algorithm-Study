package Week3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

import javax.swing.plaf.synth.SynthScrollBarUI;

public class BOJ17070 {
	static int N;
	static int[][] arr;
	static int[] dx = { 1, 0, 1 }; // 아래, 오른쪽, 오른쪽 아래 대각선
	static int[] dy = { 0, 1, 1 };
	static int count = 0;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());

		arr = new int[N][N];
		for (int i = 0; i < N; i++) {
			StringTokenizer tk1 = new StringTokenizer(br.readLine());
			for (int j = 0; j < N; j++) {
				arr[i][j] = Integer.parseInt(tk1.nextToken());
			}
		}
		// 가로 : 0 , 세로:1, 대각선:2
		move(0, 1, 0, 2);
		System.out.println("-------------------------");
		print();
		System.out.println(count);

	}

	// arrow : 현재 파이프의 모양 -> 가로면 dxdy[1,2]만! | 세로면 dxdy[0,2]가능! | 대각선이면 dxdy[0,1,2]
	// 다 가능
	static void move(int x, int y, int arrow, int cnt) {// x와 y는 오른쪽또는 밑에있는 파이프의 한쪽 이 부분을 기준으로 이동시킨다.
		System.out.println("##############");
		arr[x][y] = cnt;
		print();
		if (x == N - 1 && y == N - 1) {
			System.out.println("ㅇㅋ "+cnt+"번째에 다 왔네 다시 돌아가자");
			count++;
			return;
		}

		if (arrow == 0) {
			System.out.println("가로에서 가로로 확인해볼까");
			if (y + dy[1] < N && arr[x + dx[1]][y + dy[1]] !=1) {

				move(x + dx[1], y + dy[1], 0, cnt + 1);// 가로에서 가로로 이동
			}
			System.out.println("대각선 확인해볼까");
			if (x + 1 < N && y + 1 < N && arr[x][y + 1] != 1 && arr[x + 1][y] != 1 && 
					arr[x + dx[2]][y + dy[2]] !=1) {
				arr[x + dx[2]][y + dy[2]] = 2;
				move(x + dx[2], y + dy[2], 2, cnt + 1); // 가로 > 대각선
			}
			System.out.println("갈데가 없네..");
			return;

		} // arrow==0
		else if (arrow == 1) {
			System.out.println("세로에서 세로로 확인해볼까");
			if (x + dx[0] < N && arr[x + dx[0]][y + dy[0]] !=1) {

				arr[x + dx[0]][y + dy[0]] = 2;
				move(x + dx[0], y + dy[0], 1, cnt + 1);// 세로에서 세로로 이동
			}
			System.out.println("대각선 확인해볼까");
			if (x + dx[2] < N && y + dy[2] < N && arr[x][y + 1] !=1 && arr[x + 1][y] !=1
					&& arr[x + dx[2]][y + dy[2]] !=1) {
				arr[x + dx[2]][y + dy[2]] = 2;
				move(x + dx[2], y + dy[2], 2, cnt + 1); // 세로>대각선
			}
			System.out.println("갈데가 없네..");
			return;
		} // arrow==1
		else if (arrow == 2) {
			System.out.println("대각선에서 가로로 확인해볼까");
			if (y + dy[0] < N && arr[x + dx[0]][y + dy[0]] !=1) {
				arr[x + dx[0]][y + dy[0]] = 2;
				move(x + dx[0], y + dy[0], 0, cnt + 1);// 대각선에서 가로로 이동

			}
			System.out.println("대각선에서 세로로 확인해볼까");
			if (y + 1 < N && arr[x + dx[1]][y + dy[1]] !=1) {
				arr[x + dx[1]][y + dy[1]] = 2;
				move(x + dx[1], y + dy[1], 1, cnt + 1);// 대각선에서 세로로 이동

			}
			System.out.println("대각선 확인해볼까");
			if (x + 1 < N && y + 1 < N && arr[x][y + 1] != 1 && arr[x + 1][y] != 1 && 
					arr[x + dx[2]][y + dy[2]] != 1) {
				arr[x + dx[2]][y + dy[2]] = 2;
				move(x + dx[2], y + dy[2], 2, cnt + 1);// 대각선>대각선

			}
			System.out.println("갈데가 없네..");
			return;
		}

	}

	static void print() {
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				System.out.print(arr[i][j] + " ");
			}
			System.out.println();
		}
	}

}
